#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
"""

from main import GraphicalCalculator
import time

class ComprehensiveTest:
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"""
    
    def __init__(self):
        self.calc = GraphicalCalculator()
        self.passed = 0
        self.failed = 0
        
    def test_operation(self, name, expected, actual, tolerance=1e-10):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
        if abs(float(actual) - expected) <= tolerance:
            print(f"‚úÖ {name}: {actual} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")
            self.passed += 1
            return True
        else:
            print(f"‚ùå {name}: {actual} (–æ–∂–∏–¥–∞–ª–æ—Å—å {expected})")
            self.failed += 1
            return False
    
    def test_basic_operations(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π"""
        print("\nüî¢ –û–°–ù–û–í–ù–´–ï –û–ü–ï–†–ê–¶–ò–ò:")
        
        # –°–ª–æ–∂–µ–Ω–∏–µ
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("5")
        self.calc.operation_click("+")
        self.calc.number_click("2")
        self.calc.number_click("5")
        self.calc.calculate()
        self.test_operation("15 + 25", 40, self.calc.display_var.get())
        
        # –í—ã—á–∏—Ç–∞–Ω–∏–µ
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.number_click("0")
        self.calc.operation_click("-")
        self.calc.number_click("3")
        self.calc.number_click("7")
        self.calc.calculate()
        self.test_operation("100 - 37", 63, self.calc.display_var.get())
        
        # –£–º–Ω–æ–∂–µ–Ω–∏–µ
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("2")
        self.calc.operation_click("*")
        self.calc.number_click("8")
        self.calc.calculate()
        self.test_operation("12 * 8", 96, self.calc.display_var.get())
        
        # –î–µ–ª–µ–Ω–∏–µ
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("4")
        self.calc.number_click("4")
        self.calc.operation_click("/")
        self.calc.number_click("1")
        self.calc.number_click("2")
        self.calc.calculate()
        self.test_operation("144 / 12", 12, self.calc.display_var.get())
        
        # –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å
        self.calc.clear()
        self.calc.number_click("2")
        self.calc.operation_click("^")
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.calculate()
        self.test_operation("2 ^ 10", 1024, self.calc.display_var.get())
    
    def test_special_functions(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π"""
        print("\n‚öôÔ∏è –°–ü–ï–¶–ò–ê–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò:")
        
        # –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.number_click("0")
        self.calc.sqrt()
        self.test_operation("‚àö100", 10, self.calc.display_var.get())
        
        # –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ –∫–≤–∞–¥—Ä–∞—Ç
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("2")
        self.calc.square()
        self.test_operation("12¬≤", 144, self.calc.display_var.get())
        
        # –û–±—Ä–∞—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        self.calc.clear()
        self.calc.number_click("4")
        self.calc.reciprocal()
        self.test_operation("1/4", 0.25, self.calc.display_var.get())
        
        # –ü—Ä–æ—Ü–µ–Ω—Ç
        self.calc.clear()
        self.calc.number_click("8")
        self.calc.number_click("0")
        self.calc.percentage()
        self.test_operation("80%", 0.8, self.calc.display_var.get())
        
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–∞
        self.calc.clear()
        self.calc.number_click("4")
        self.calc.number_click("2")
        self.calc.plus_minus()
        self.test_operation("¬±42", -42, self.calc.display_var.get())
        
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∑–Ω–∞–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ
        self.calc.plus_minus()
        self.test_operation("¬±(-42)", 42, self.calc.display_var.get())
    
    def test_decimal_operations(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏"""
        print("\nüî¢ –î–ï–°–Ø–¢–ò–ß–ù–´–ï –ß–ò–°–õ–ê:")
        
        # –°–ª–æ–∂–µ–Ω–∏–µ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏
        self.calc.clear()
        self.calc.number_click("3")
        self.calc.number_click(".")
        self.calc.number_click("1")
        self.calc.number_click("4")
        self.calc.operation_click("+")
        self.calc.number_click("2")
        self.calc.number_click(".")
        self.calc.number_click("8")
        self.calc.number_click("6")
        self.calc.calculate()
        self.test_operation("3.14 + 2.86", 6.0, self.calc.display_var.get())
        
        # –£–º–Ω–æ–∂–µ–Ω–∏–µ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏
        self.calc.clear()
        self.calc.number_click("2")
        self.calc.number_click(".")
        self.calc.number_click("5")
        self.calc.operation_click("*")
        self.calc.number_click("4")
        self.calc.calculate()
        self.test_operation("2.5 * 4", 10.0, self.calc.display_var.get())
        
        # –î–µ–ª–µ–Ω–∏–µ —Å –¥–µ—Å—è—Ç–∏—á–Ω—ã–º–∏
        self.calc.clear()
        self.calc.number_click("7")
        self.calc.number_click(".")
        self.calc.number_click("5")
        self.calc.operation_click("/")
        self.calc.number_click("2")
        self.calc.number_click(".")
        self.calc.number_click("5")
        self.calc.calculate()
        self.test_operation("7.5 / 2.5", 3.0, self.calc.display_var.get())
    
    def test_complex_calculations(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π"""
        print("\nüßÆ –°–õ–û–ñ–ù–´–ï –í–´–ß–ò–°–õ–ï–ù–ò–Ø:")
        
        # –¶–µ–ø–æ—á–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–π: 5 + 3 * 2
        self.calc.clear()
        self.calc.number_click("5")
        self.calc.operation_click("+")
        self.calc.number_click("3")
        self.calc.calculate()  # 8
        self.calc.operation_click("*")
        self.calc.number_click("2")
        self.calc.calculate()  # 16
        self.test_operation("(5 + 3) * 2", 16, self.calc.display_var.get())
        
        # –í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å –∏ –∫–æ—Ä–µ–Ω—å
        self.calc.clear()
        self.calc.number_click("3")
        self.calc.operation_click("^")
        self.calc.number_click("2")
        self.calc.calculate()  # 9
        self.calc.sqrt()  # 3
        self.test_operation("‚àö(3¬≤)", 3, self.calc.display_var.get())
        
        # –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.number_click("0")
        self.calc.operation_click("/")
        self.calc.number_click("4")
        self.calc.calculate()  # 25
        self.calc.square()  # 625
        self.test_operation("(100 / 4)¬≤", 625, self.calc.display_var.get())
    
    def test_edge_cases(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤"""
        print("\n‚ö†Ô∏è –ì–†–ê–ù–ò–ß–ù–´–ï –°–õ–£–ß–ê–ò:")
        
        # –ù–æ–ª—å
        self.calc.clear()
        self.calc.number_click("0")
        self.calc.operation_click("+")
        self.calc.number_click("5")
        self.calc.calculate()
        self.test_operation("0 + 5", 5, self.calc.display_var.get())
        
        # –û–ø–µ—Ä–∞—Ü–∏—è —Å –Ω—É–ª–µ–º
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.operation_click("*")
        self.calc.number_click("0")
        self.calc.calculate()
        self.test_operation("10 * 0", 0, self.calc.display_var.get())
        
        # –ï–¥–∏–Ω–∏—Ü–∞
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.operation_click("^")
        self.calc.number_click("1")
        self.calc.number_click("0")
        self.calc.number_click("0")
        self.calc.calculate()
        self.test_operation("1 ^ 100", 1, self.calc.display_var.get())
        
        # –ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π –∫–æ—Ä–µ–Ω—å –∏–∑ 1
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.sqrt()
        self.test_operation("‚àö1", 1, self.calc.display_var.get())
        
        # –ö–≤–∞–¥—Ä–∞—Ç –µ–¥–∏–Ω–∏—Ü—ã
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.square()
        self.test_operation("1¬≤", 1, self.calc.display_var.get())
    
    def test_clear_functions(self):
        """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –æ—á–∏—Å—Ç–∫–∏"""
        print("\nüßπ –§–£–ù–ö–¶–ò–ò –û–ß–ò–°–¢–ö–ò:")
        
        # –¢–µ—Å—Ç C (–ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞)
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("2")
        self.calc.number_click("3")
        self.calc.operation_click("+")
        self.calc.number_click("4")
        self.calc.number_click("5")
        self.calc.clear()
        expected_display = "0"
        expected_operation = ""
        actual_display = self.calc.display_var.get()
        actual_operation = self.calc.operation
        
        if actual_display == expected_display and actual_operation == expected_operation:
            print("‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (C): —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            self.passed += 1
        else:
            print(f"‚ùå –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ (C): –¥–∏—Å–ø–ª–µ–π={actual_display}, –æ–ø–µ—Ä–∞—Ü–∏—è={actual_operation}")
            self.failed += 1
        
        # –¢–µ—Å—Ç CE (–æ—á–∏—Å—Ç–∫–∞ –≤–≤–æ–¥–∞)
        self.calc.clear()
        self.calc.number_click("1")
        self.calc.number_click("2")
        self.calc.number_click("3")
        self.calc.clear_entry()
        
        if self.calc.display_var.get() == "0":
            print("‚úÖ –û—á–∏—Å—Ç–∫–∞ –≤–≤–æ–¥–∞ (CE): —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            self.passed += 1
        else:
            print(f"‚ùå –û—á–∏—Å—Ç–∫–∞ –≤–≤–æ–¥–∞ (CE): {self.calc.display_var.get()}")
            self.failed += 1
    
    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        print("üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–†–ê")
        print("=" * 50)
        
        self.test_basic_operations()
        self.test_special_functions()
        self.test_decimal_operations()
        self.test_complex_calculations()
        self.test_edge_cases()
        self.test_clear_functions()
        
        print("\n" + "=" * 50)
        print(f"üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
        print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {self.passed}")
        print(f"‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: {self.failed}")
        print(f"üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: {self.passed}/{self.passed + self.failed} ({100 * self.passed / (self.passed + self.failed):.1f}%)")
        
        if self.failed == 0:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        else:
            print(f"\n‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ {self.failed} —Ç–µ—Å—Ç–∞—Ö")
        
        return self.failed == 0

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    tester = ComprehensiveTest()
    tester.run_all_tests()

if __name__ == "__main__":
    main() 